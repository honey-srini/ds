ex1

1.
  
#include<stdio.h>
void main()
{
    int a[50],n,i,j,tmp;
    printf("Enter the no of elements :");
    scanf("%d",&n);
    //getting the numbers
    printf("Enter the numbers : ");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    //sorting
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]> a[j])
            {
                tmp=a[i];
                a[i]=a[j];
                a[j]=tmp;
            }   
        }
    }
//printing sorted elements
printf("The ascending order is :");
for(i=0;i<n;i++)
    printf("\n %d",a[i]);

}



2.
#include <stdio.h>
void main()
{
    int a[10],i,n,min,max;
   
    printf("Enter the no of elements : ");
    scanf("%d",&n);
 
    printf("Enter the numbers : ");
    for(i=0; i<n; i++)
    {
        scanf("%d",&a[i]);
    }
 
    min=max=a[0];
    for(i=1; i<n; i++)
    {
         if(min>a[i])
		  min=a[i];   
		   if(max<a[i])
		    max=a[i];       
    }
     printf("minimum of array is : %d",min);
    printf("\n maximum of array is : %d",max);

}


3.
#include <stdio.h>

void main() {
  int n1, n2, n3;
  printf("Enter the three elements: ");
  scanf("%d %d %d", &n1, &n2, &n3);

  if (n1 >= n2 && n1 >= n3)
    printf("%d is the greatest number.", n1);

  if (n2 >= n1 && n2 >= n3)
    printf("%d is the greatest number.", n2);

  if (n3 >= n1 && n3 >= n2)
    printf("%d is the greatest number.", n3);

}


4.
// #include <stdio.h>
// void main()
// {       int arr[20];
//         int n,i;
//         printf("Enter the range :");
//         scanf("%d",&n);

//         arr[0] = 0;
//         arr[1] = 1;
//         printf("FIBONACCI SERIES: \n");

//         for(i = 2; i < n; i++)
//         {

//         arr[i] = arr[i-1] + arr[i-2];
//         }

//         for (i = 0; i < n; i++)
//         {

//         printf("\n%d", arr[i]);
//         }
// }

#include<stdio.h>    
int main()    
{    
 int a,b,c,i,n;   
 printf("Enter the number of elements:");    
 scanf("%d",&n);    
 a=0;
 b=1;
 printf("\n%d %d",a,b);  
 for(i=2;i<n;++i)   
 {    
  c=a+b;  
  printf(" %d",c);    
  a=b;
  b=c;  
 }  

 }    

5.
#include <stdio.h>  

  
void main ()  
{  
    int arr[10];  
    int p, i, n; // declare int type variable  
    printf (" Enter the number of elements in an array:  ");  
    scanf (" %d", &n);  
    printf (" Enter %d elements in array:", n);  
    // use for loop to insert elements one by one in array  
    for (i = 0; i < n; i++ )  
    {   printf (" arr[%d] = ", i);  
        scanf (" %d", &arr[i]);  
    }  
      
    // enter the position of the element to be deleted  
    printf( " enter the index of the element to be deleted : ");  
    scanf (" %d", &p);  
      
    // check whether the deletion is possible or not  
    if (p >= n+1)  
    {  
        printf (" \n Deletion is not possible in the array.");  
    }  
    else  
    {  
        // use for loop to delete the element and update the index  
        for (i = p; i < n -1; i++)  
        {  
            arr[i] = arr[i+1]; // assign arr[i+1] to arr[i]  
        }  
          
        printf (" \n The resultant array is: \n");  
          
        // display the final array  
        for (i = 0; i< n - 1; i++)  
        {  
            printf (" arr[%d] = ", i);  
            printf (" %d \n", arr[i]);  
        }  
    }   
}  

6.
#include <stdio.h>  

  
void main ()  
{  
    int arr[10];  
    int p, i, n; // declare int type variable  
    printf (" Enter the number of elements in an array:  ");  
    scanf (" %d", &n);  
    printf (" Enter %d elements in array:", n);  
    // use for loop to insert elements one by one in array  
    for (i = 0; i < n; i++ )  
    {   printf (" arr[%d] = ", i);  
        scanf (" %d", &arr[i]);  
    }  
      
    // enter the position of the element to be deleted  
    printf( " enter the index of the element to be deleted : ");  
    scanf (" %d", &p);  
      
    // check whether the deletion is possible or not  
    if (p >= n+1)  
    {  
        printf (" \n Deletion is not possible in the array.");  
    }  
    else  
    {  
        // use for loop to delete the element and update the index  
        for (i = p; i < n -1; i++)  
        {  
            arr[i] = arr[i+1]; // assign arr[i+1] to arr[i]  
        }  
          
        printf (" \n The resultant array is: \n");  
          
        // display the final array  
        for (i = 0; i< n - 1; i++)  
        {  
            printf (" arr[%d] = ", i);  
            printf (" %d \n", arr[i]);  
        }  
    }   
}  


7.
#include<stdio.h>     
int main(){  
int a[10][10],b[10][10],mul[10][10],r,c,i,j,k;    
 
printf("enter the number of rows =");    
scanf("%d",&r);    
printf("enter the number of columns =");    
scanf("%d",&c);    
printf("enter the first matrix elements = \n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
scanf("%d",&a[i][j]);    
}    
}    
printf("enter the second matrix elements = \n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
scanf("%d",&b[i][j]);    
}    
}    
    
printf("Multiplication of the 2 matrix= \n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
mul[i][j]=0;    
for(k=0;k<c;k++)    
{    
mul[i][j]+=a[i][k]*b[k][j];    
}    
}    
}    
//for printing result    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
printf("%d\t",mul[i][j]);    
}    
printf("\n");    
}    

}  

  

ex2

#include<stdio.h>
struct student
{
    char name[20];
    int reg;
    int marks;
};
int main()
{
    struct student s[20],temp;
    int i,j,n,s1,s2,s3,sum,ct=1;
    printf("enter the no.of students :");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        printf("Enter Name , Reg.No and Marks in 3 Subjects : \n");
        scanf("%s %d %d %d %d" ,s[i].name , &s[i].reg ,&s1,&s2,&s3);
        sum=s1+s2+s3;
        s[i].marks=sum;
    }


    for(i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(s[i].marks < s[j].marks)
            {
                temp=s[i];
                s[i]=s[j];
                s[j]=temp;
            }
        }
    }

    printf("Rank List : \n");
    for(i=0;i<n;i++)
    {
        printf("Rank : %d \n",ct);
        printf("Name : %s \n",s[i].name);
        printf("Registration No : %d \n",s[i].reg);
        printf("Marks : %d \n\n",s[i].marks);
        ct++;
    }
    return 0;
}


ex3

#include<stdio.h>
#include<string.h>

struct book
{
    int bnum;
    char bookname[20];
    char bookauthr[20];
    int year;
    int copies;
};

struct book b[20];
void issuebook (int n)
{
    int bnum,flag=0,i=0;
    printf("Enter the book number \n");
    scanf("%d",&bnum);
    for(i=0;i<n;i++)
    {
        if(b[i].bnum==bnum)
        {
            b[i].copies--;
            flag=1;
            break;
        }
    }
    if(flag==0)
    {
        printf("Book number is invalid \n");
    }
    if (flag==1)
    {
        printf("No.of copies =%d \n",b[i].copies);
    }
}

void returnbook(int n)
{
    int bnum,flag=0,i=0;
    printf("Enter the book number : \n");
    scanf("%d", &bnum);
    for(i=0;i<n;i++)
    {
        if(b[i].bnum==bnum)
        {
            b[i].copies++;
            flag=1;
            break;
        }
    }
    if (flag==0)
    {
        printf("Book number invalid \n");
    }
    if(flag==1)
    {
        printf("no.of copies %d \n",b[i].copies);
    }
}

void listbook(int n)
{
    int i=0, year=0, flag=0 ;
    printf("enter the year : \n");
    scanf("%d",&year);
    for(i=0;i<n;i++)
    {
        if(b[i].year==year)
        {
            printf("Book Number : %d",b[i].bnum);
            printf("\nBook Name : %s",b[i].bookname);
            printf("\nBook Author : %s",b[i].bookauthr);
            printf("\nCopies of book : %d",b[i].copies);
            printf("\nYear of publication : %d",b[i].year);
            printf("\n");
            printf("\n");
            flag=1;
            break;
        }
    }
}

void listallbook (int n)
{
    int i=0;
    for(i=0;i<n;i++)
    {
        printf("Book number : %d",b[i].bnum);
        printf("\nBook name : %s",b[i].bookname);
        printf("\nCopies of book : %d",b[i].copies);
        printf("\n");
        printf("\n");
    }
}

void listcopies (int n)
{
    char name[20];
    int i=0 , result;
    printf("Enter the name of the book :\n");
    scanf("%s",name);
    for(i=0;i<n;i++)
    {
        result=strcmp(name,b[i].bookname);
        if(result==0)
        {
            printf("No of copies is %d :\n",b[i].copies);
            printf("\n");
        }
    }
}

int main()
{
    int n,ch;
    printf("How many books available ? \n");
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        printf("Enter the book number : \n");
        scanf("%d",&b[i].bnum);
        printf("Enter the name of book : \n");
        scanf("%s",&b[i].bookname);
        printf("Enter the name of author: \n");
        scanf("%s",&b[i].bookauthr);
        printf("Enter the year of publication : \n");
        scanf("%d",&b[i].year);
        printf("Enter the total number of copies : \n");
        scanf("%d",&b[i].copies);
        printf("---------\n");
    }

    while(ch>=0)
    {
        printf("0 - exit \n");
        printf("1 - issue a book \n");
        printf("2 - accept a book \n");
        printf("3 - list books based on year \n");
        printf("4 - list all the books \n");
        printf("5 - search copies of a book by name \n");
        printf("\n");
        scanf("%d", &ch);

        if(ch==0)
        return 0;
        else if(ch==1)
        issuebook(n);
        else if(ch==2)
        returnbook(n);
        else if(ch==3)
        listbook(n);
        else if(ch==4)
        listallbook(n);
        else if(ch==5)
        listcopies(n);
    }   

}

ex.4

#include<stdio.h>

#include<stdlib.h>
 
#define Size 4 
 
int Top=-1, arr[Size];
void Push();
void Pop();
void isempty();
void top();
void show();
void search();
 
int main()
{
	int choice;
	
	while(1)	
	{
        printf("\n");
		printf("\nSTACK OPERATIONS :");
		printf("\n1.Push the element");
        printf("\n2.Pop the element");
        printf("\n3.Check the stack is empty or not");
        printf("\n4.Top element");
        printf("\n5.Show");
		printf("\n6.Search");
        printf("\n7.Exit");
		printf("\n\nEnter the choice:");
		scanf("%d",&choice);
		
		switch(choice)
		{
			case 1: 
            Push();
			break;

			case 2: 
            Pop();
			break;

			case 3:
            isempty();
			break;

            case 4:
            top();
            break;

            case 5:
            show();
            break;

			case 6:
            search();
            break;

			case 7: 
            exit(0);
			
			default:
            printf("\nInvalid choice!!");
		}
	}
}
 
void Push()
{
	int x;
	
	if(Top==Size-1)
	{
		printf("\nOverflow!!");
	}
	else
	{
		printf("\nEnter element to be inserted to the stack:");
		scanf("%d",&x);
		Top=Top+1;
		arr[Top]=x;
	}
}
 
void Pop()
{
	if(Top==-1)
	{
		printf("\nUnderflow!!");
	}
	else
	{
		printf("\nPopped element:  %d",arr[Top]);
		Top=Top-1;
	}
}

void isempty()
{
    if(Top==-1)
	{
		printf("\nThe Stack is Empty\n");
	}

    else
    {
        printf("\nThe stack is Not Empty\n");
    }

}
 
void top()
{
    printf("\nThe top of the Stack is :%d",arr[Top]);

}

void show()
{
	
	if(Top==-1)
	{
		printf("\nUnderflow!!");
	}
	else
	{
		printf("\nElements present in the stack: \n");
		for(int i=Top;i>=0;--i)
			printf("%d\n",arr[i]);
	}
}

void search()
{
	int n,i;
	if(Top==-1)
	{
		printf("\nUnderflow!!");
	}
	else
	{
		printf("Enter the element to be searched :");
		scanf("%d",&n);
		for(i=0;i<n;i++)
		{
			if(arr[i]==n)
			{
				printf("%d element is the location %d ",arr[i],i );
			}
		}
		
	}
}